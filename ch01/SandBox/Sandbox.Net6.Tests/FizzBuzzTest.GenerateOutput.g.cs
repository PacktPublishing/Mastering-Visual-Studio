using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace kata.Tests
{
    public partial class FizzBuzzTest
    {

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput362()
{
    string[] ss;
    ss = this.GenerateOutput(0);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(0, (int)(ss.Length));
}

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput830()
{
    string[] ss;
    ss = this.GenerateOutput(1);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(1, (int)(ss.Length));
    PexAssert.AreEqual<string>("1", ss[0]);
}

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput233()
{
    string[] ss;
    ss = this.GenerateOutput(2);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(2, (int)(ss.Length));
    PexAssert.AreEqual<string>("1", ss[0]);
    PexAssert.AreEqual<string>("2", ss[1]);
}

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput561()
{
    string[] ss;
    ss = this.GenerateOutput(3);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(3, (int)(ss.Length));
    PexAssert.AreEqual<string>("1", ss[0]);
    PexAssert.AreEqual<string>("2", ss[1]);
    PexAssert.AreEqual<string>("Fizz", ss[2]);
}

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput546()
{
    string[] ss;
    ss = this.GenerateOutput(7);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(7, (int)(ss.Length));
    PexAssert.AreEqual<string>("1", ss[0]);
    PexAssert.AreEqual<string>("2", ss[1]);
    PexAssert.AreEqual<string>("Fizz", ss[2]);
    PexAssert.AreEqual<string>("4", ss[3]);
    PexAssert.AreEqual<string>("Buzz", ss[4]);
    PexAssert.AreEqual<string>("Fizz", ss[5]);
    PexAssert.AreEqual<string>("7", ss[6]);
}

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput876()
{
    string[] ss;
    ss = this.GenerateOutput(15);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(15, (int)(ss.Length));
    PexAssert.AreEqual<string>("1", ss[0]);
    PexAssert.AreEqual<string>("2", ss[1]);
    PexAssert.AreEqual<string>("Fizz", ss[2]);
    PexAssert.AreEqual<string>("4", ss[3]);
    PexAssert.AreEqual<string>("Buzz", ss[4]);
    PexAssert.AreEqual<string>("Fizz", ss[5]);
    PexAssert.AreEqual<string>("7", ss[6]);
    PexAssert.AreEqual<string>("8", ss[7]);
    PexAssert.AreEqual<string>("Fizz", ss[8]);
    PexAssert.AreEqual<string>("Buzz", ss[9]);
    PexAssert.AreEqual<string>("11", ss[10]);
    PexAssert.AreEqual<string>("Fizz", ss[11]);
    PexAssert.AreEqual<string>("13", ss[12]);
    PexAssert.AreEqual<string>("14", ss[13]);
    PexAssert.AreEqual<string>("FizzBuzz", ss[14]);
}

[TestMethod]
[PexGeneratedBy(typeof(FizzBuzzTest))]
public void GenerateOutput905()
{
    string[] ss;
    ss = this.GenerateOutput(31);
    PexAssert.IsNotNull((object)ss);
    PexAssert.AreEqual<int>(31, (int)(ss.Length));
    PexAssert.AreEqual<string>("1", ss[0]);
    PexAssert.AreEqual<string>("2", ss[1]);
    PexAssert.AreEqual<string>("Fizz", ss[2]);
    PexAssert.AreEqual<string>("4", ss[3]);
    PexAssert.AreEqual<string>("Buzz", ss[4]);
    PexAssert.AreEqual<string>("Fizz", ss[5]);
    PexAssert.AreEqual<string>("7", ss[6]);
    PexAssert.AreEqual<string>("8", ss[7]);
    PexAssert.AreEqual<string>("Fizz", ss[8]);
    PexAssert.AreEqual<string>("Buzz", ss[9]);
    PexAssert.AreEqual<string>("11", ss[10]);
    PexAssert.AreEqual<string>("Fizz", ss[11]);
    PexAssert.AreEqual<string>("13", ss[12]);
    PexAssert.AreEqual<string>("14", ss[13]);
    PexAssert.AreEqual<string>("FizzBuzz", ss[14]);
    PexAssert.AreEqual<string>("16", ss[15]);
    PexAssert.AreEqual<string>("17", ss[16]);
    PexAssert.AreEqual<string>("Fizz", ss[17]);
    PexAssert.AreEqual<string>("19", ss[18]);
    PexAssert.AreEqual<string>("Buzz", ss[19]);
    PexAssert.AreEqual<string>("Fizz", ss[20]);
    PexAssert.AreEqual<string>("22", ss[21]);
    PexAssert.AreEqual<string>("23", ss[22]);
    PexAssert.AreEqual<string>("Fizz", ss[23]);
    PexAssert.AreEqual<string>("Buzz", ss[24]);
    PexAssert.AreEqual<string>("26", ss[25]);
    PexAssert.AreEqual<string>("Fizz", ss[26]);
    PexAssert.AreEqual<string>("28", ss[27]);
    PexAssert.AreEqual<string>("29", ss[28]);
    PexAssert.AreEqual<string>("FizzBuzz", ss[29]);
    PexAssert.AreEqual<string>("31", ss[30]);
}
    }
}
